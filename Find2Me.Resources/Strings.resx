<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConfirmationEmailSubject" xml:space="preserve">
    <value>Confirm your Email Address - Find2Me</value>
  </data>
  <data name="CreateAd" xml:space="preserve">
    <value>Here you can create add</value>
  </data>
  <data name="ProfileAdsOnline" xml:space="preserve">
    <value>ads online</value>
  </data>
  <data name="ProfileConfirmationEmailInfoText" xml:space="preserve">
    <value>A email confirmation link is sent to the provided email address via email. Please confirm your email address.</value>
  </data>
  <data name="ProfileConfirmationEmailInfoText2" xml:space="preserve">
    <value>Please confirm your email address. An email has been sent to you.</value>
  </data>
  <data name="ProfileDeleteProfile" xml:space="preserve">
    <value>Delete profile</value>
  </data>
  <data name="ProfileEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="ProfileFindingsCompleted" xml:space="preserve">
    <value>findings completed</value>
  </data>
  <data name="ProfileFollow" xml:space="preserve">
    <value>Follow</value>
  </data>
  <data name="ProfileFollowers" xml:space="preserve">
    <value>followers</value>
  </data>
  <data name="ProfileFollowMe" xml:space="preserve">
    <value>Follow me</value>
  </data>
  <data name="ProfilePrivateMessage" xml:space="preserve">
    <value>PRIVATE MESSAGE</value>
  </data>
  <data name="ProfileRegisteredEmailInfoText" xml:space="preserve">
    <value>Your account is registered with this email address, through </value>
  </data>
  <data name="ProfileResendEmail" xml:space="preserve">
    <value>Resend</value>
  </data>
  <data name="ProfileSeeThemHere" xml:space="preserve">
    <value>see them here</value>
  </data>
  <data name="ProfileSince" xml:space="preserve">
    <value>has been here since</value>
  </data>
  <data name="ProfileUnFollow" xml:space="preserve">
    <value>Un Follow</value>
  </data>
  <data name="ProfileUpdateProfile" xml:space="preserve">
    <value>Update profile</value>
  </data>
  <data name="ProfileYourAds" xml:space="preserve">
    <value>YOUR ADS</value>
  </data>
  <data name="SomeLocalisedString" xml:space="preserve">
    <value>This English</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Please provide a valid email address.</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Fullname" xml:space="preserve">
    <value>Fullname</value>
  </data>
  <data name="FullNameRegex" xml:space="preserve">
    <value>Full name should contain minimum 2 words.</value>
  </data>
  <data name="FullNameRequired" xml:space="preserve">
    <value>Please provide a valid full name.</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="PreferredCurrency" xml:space="preserve">
    <value>Preferred currency</value>
  </data>
  <data name="PreferredCurrencyRequired" xml:space="preserve">
    <value>Please provide a valid currency.</value>
  </data>
  <data name="PreferredLanguage" xml:space="preserve">
    <value>Preferred language</value>
  </data>
  <data name="PreferredLanguageRequired" xml:space="preserve">
    <value>Please provide a valid language.</value>
  </data>
  <data name="Sex" xml:space="preserve">
    <value>Sex</value>
  </data>
  <data name="SexRequired" xml:space="preserve">
    <value>Please provide a valid sex.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernameMinLength" xml:space="preserve">
    <value>Username must contains atleast 5 characters.</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Please provide a valid username.</value>
  </data>
  <data name="YearOfBirth" xml:space="preserve">
    <value>Year of birth</value>
  </data>
  <data name="YearOfBirthRequired" xml:space="preserve">
    <value>Please provide a valid year of birth.</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="ProfileEnterUsernamePlaceHolder" xml:space="preserve">
    <value>Enter a username</value>
  </data>
  <data name="ProfileUsernameInvalidText" xml:space="preserve">
    <value>Username is invalid.</value>
  </data>
  <data name="ProfileUsernameValidText" xml:space="preserve">
    <value>Username is valid.</value>
  </data>
  <data name="ProfileWizard_ProfileStep1" xml:space="preserve">
    <value>Profile image</value>
  </data>
  <data name="ProfileWizard_ProfileStep2" xml:space="preserve">
    <value>Profile info</value>
  </data>
  <data name="ProfileWizard_ProfileStep3" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Step1_CropperModalCancelBtn" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Step1_CropperModalUpdateBtn" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Step1_CropView" xml:space="preserve">
    <value>Crop View</value>
  </data>
  <data name="Step1_EditProfilePicBtn" xml:space="preserve">
    <value>Edit image</value>
  </data>
  <data name="Step1_ImageNotUploadedAlertText" xml:space="preserve">
    <value>You haven't uploaded any profile picture yet. Please upload a picture first!</value>
  </data>
  <data name="Step1_ImageRequired" xml:space="preserve">
    <value>Please upload a profile picture.</value>
  </data>
  <data name="Step1_OriginalImage" xml:space="preserve">
    <value>Original Image</value>
  </data>
  <data name="Step1_ProfileDescriptionText1" xml:space="preserve">
    <value>Your profile is almost ready.</value>
  </data>
  <data name="Step1_ProfileDescriptionText2" xml:space="preserve">
    <value>Please add your profile image to your profile. You will always be able to change it later.</value>
  </data>
  <data name="Step1_ProfileDescriptionText3" xml:space="preserve">
    <value>The profile image is shown together with your ad, comments and other things.</value>
  </data>
  <data name="Step1_ProfileImageUpdatedInfoText" xml:space="preserve">
    <value>Done! Profile Image is updated successfully!</value>
  </data>
  <data name="Step1_ProfileImageUpdateFailedInfoText" xml:space="preserve">
    <value>Oops! There was an error while updating Profile Image.</value>
  </data>
  <data name="Step1_UploadImageBtn" xml:space="preserve">
    <value>Upload profile image</value>
  </data>
  <data name="Step1_UploadImageModalHeading" xml:space="preserve">
    <value>Edit Profile Image</value>
  </data>
  <data name="Step2_ExternalProviderInfoText" xml:space="preserve">
    <value>Your account is registered with this email address, through</value>
  </data>
  <data name="Step2_ProfileDescriptionText1" xml:space="preserve">
    <value>Profile information</value>
  </data>
  <data name="Step2_ProfileDescriptionText2" xml:space="preserve">
    <value>Please add your profile data. You will always be able to change it later.</value>
  </data>
  <data name="Step2_ResendConfirmationLinkBtn" xml:space="preserve">
    <value>Resend Confirmation Link</value>
  </data>
  <data name="Step3_GoToFrontPageLinkTxt" xml:space="preserve">
    <value>Go to frontpage</value>
  </data>
  <data name="Step3_GoToProfilePageLinkTxt" xml:space="preserve">
    <value>Go to your profile page</value>
  </data>
  <data name="Step3_ProfileDescriptionText1" xml:space="preserve">
    <value>Thank You</value>
  </data>
  <data name="Step3_ProfileDescriptionText2" xml:space="preserve">
    <value>Your account is now ready.</value>
  </data>
  <data name="Step3_ProfileDescriptionText3" xml:space="preserve">
    <value>What would you like to do first?</value>
  </data>
  <data name="Wizard_PageHeading" xml:space="preserve">
    <value>Profile setup wizard</value>
  </data>
  <data name="Lookup_Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="Step3_EmailConfirmationLinkText" xml:space="preserve">
    <value>A email confirmation link is sent to the provided email address via email. Please confirm your email address.</value>
  </data>
  <data name="ProfileFullnamePlaceholder" xml:space="preserve">
    <value>Enter your full name</value>
  </data>
  <data name="ProfileHeaderText" xml:space="preserve">
    <value>Your profile</value>
  </data>
  <data name="ProfileImageCrop_UploadBtnText" xml:space="preserve">
    <value>Upload</value>
  </data>
</root>